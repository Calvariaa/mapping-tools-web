@using System.Globalization
@using TG.Blazor.IndexedDB
@using MappingToolsWeb.IndexedDB
@using MappingToolsWeb.IndexedDB.Records

@if (isLoaded)
{
    @ChildContent
}
else
{
    <div class="loading-container">
        <img class="logo spinning-logo" src="icons/mt_logo.svg" />
    </div>
}

@code {
    [Inject] ILocalStorageService localStorage { get; set; }
    [Inject] IndexedDBManager indexedDbMgr { get; set; }
    [Inject] INestedIndexedDbCache<ContentTag, IOrderedRecords<IFileRecord>, IFileRecord> fileCache { get; set; }
    [Inject] ILocalizer localizer { get; set; }
    [Inject] ILanguageContainerService i18n { get; set; }
    [Inject] IMappingToolsSettingsService settings { get; set; }

    [Parameter] public RenderFragment ChildContent { get; set; }

    bool isLoaded;

    protected override async Task OnInitializedAsync()
    {
        if(!fileCache.IsInitialized) {
            await fileCache.InitializeAsync();
        }

        var lang = await localStorage.GetItemAsync<string>("language");

        if(!string.IsNullOrWhiteSpace(lang)) {
            var culture = CultureInfo.CreateSpecificCulture(lang);

            if(localizer.SupportedCultures.Contains(culture)) {
                i18n.SetLanguage(culture);
            }
        }

        await settings.LoadFromLocalStorageAsync();

        isLoaded = true;
    }
}
