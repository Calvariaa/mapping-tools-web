@inherits LayoutComponentBase

<MudThemeProvider Theme="@currentTheme"/>
<MudDialogProvider CloseButton="true" MaxWidth="MaxWidth.Large" />
<MudSnackbarProvider/>

<LoadingScreen>
    <MudLayout>
        <MudAppBar Elevation="1">
            <MudText Style="user-select: none;" Typo="Typo.h5" Class="mr-10" Color="Color.Inherit">osu! Mapping Tools</MudText>
            <MudAppBarSpacer />
            <MudIcon Icon="@Icons.Filled.Menu"></MudIcon>
            <div class="mr-5">
                <MudToggleIconButton
                    Class="ma-0"
                    Color="Color.Inherit"
                    ToggledColor="Color.Inherit"
                    Edge="Edge.Start"
                    Toggled="@isLightTheme" 
                    ToggledChanged="ToggleTheme" 
                    Icon="@Icons.Material.Filled.NightlightRound"
                    ToggledIcon="@Icons.Material.Outlined.WbSunny">
                </MudToggleIconButton>
                <MudIconButton Color="Color.Inherit" Class="ma-0" Icon="@Icons.Filled.Translate" OnClick="OnLanguageClicked"></MudIconButton>
                <MudIconButton Color="Color.Inherit" Class="ma-0" Icon="@Icons.Filled.Settings" Link="settings/"></MudIconButton>
            </div>
            <MudIconButton Class="ma-0" Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.End" OnClick="FilesToggleOpen" />
        </MudAppBar>
        <MudDrawer Variant="DrawerVariant.Persistent" Open="true" Elevation="2" Class="pa-3">
            <a href="" class="mud-drawer-header" style="padding: 0;">
                <img width="100px" height="100px" src="icons/mt_logo.svg" style="margin-left: auto; margin-right: auto;" />
            </a>
            <MudText Typo="Typo.subtitle2" Align="Align.Center">@GetVersion()</MudText>
            <div class="d-flex mb-4 mt-2 justify-center align-center">
                <MudIconButton Color="Color.Inherit" Target="_Blank" Class="ma-0" Icon="fab fa-discord" Link="https://discord.gg/YfjKN2yjQV" />
                <MudIconButton Color="Color.Inherit" Target="_Blank" Class="ma-0 ml-2" Icon="@Icons.Custom.Brands.GitHub" Link="https://github.com/misakura-rin/mapping-tools-web" />
                <MudIconButton Color="Color.Inherit" Target="_Blank" Class="ma-0 ml-2" Icon="fab fa-patreon" Link="https://www.patreon.com/OliBomby"></MudIconButton>
            </div>
            <NavMenu />
        </MudDrawer>
        <MudDrawer Width="100%" Height="100%" @bind-Open="filesOpen" Elevation="2" Anchor="Anchor.Right" ClipMode="DrawerClipMode.Always" Variant="DrawerVariant.Persistent" Class="pa-2">  
            <FileSystem />
        </MudDrawer>
        <MudMainContent>
            <MudContainer MaxWidth="MaxWidth.False" Class="py-10">
                @Body
            </MudContainer>
        </MudMainContent>
    </MudLayout>
</LoadingScreen>

<MudDialog @bind-IsVisible="languageSelectVisible" DisableSidePadding="true">
    <TitleContent>
        <MudText Typo="Typo.h5" Class="mr-12">@i18n["changeLanguage"]</MudText>
    </TitleContent>
    <DialogContent>
        <MudContainer Class="pb-11" Style="min-width: 400px;">
            <LanguageSelector ParentEventHandler="OnLanguageSelected" />
        </MudContainer>
    </DialogContent>
</MudDialog>

@code {
    [Inject] ILocalStorageService localStorage { get; set; }
    [Inject] List<ChangelogModel> changelogs { get; set; }
    [Inject] ILanguageContainerService i18n { get; set; }

    enum Theme {
        Dark,
        Light
    }

    bool languageSelectVisible;

    bool toolsOpen = true;
    bool filesOpen = true;

    bool isLightTheme;

    MudTheme currentTheme;

    MudTheme darkTheme = new MudTheme {
        Palette = new Palette {
            Black = "#27272f",
            Background = "#32333d",
            BackgroundGrey = "#27272f",
            Surface = "#373740",
            DrawerBackground = "#27272f",
            DrawerText = "rgba(255,255,255, 0.50)",
            DrawerIcon = "rgba(255,255,255, 0.50)",
            AppbarBackground = "#27272f",
            AppbarText = "rgba(255,255,255, 0.70)",
            TextPrimary = "rgba(255,255,255, 0.70)",
            TextSecondary = "rgba(255,255,255, 0.50)",
            ActionDefault = "#adadb1",
            ActionDisabled = "rgba(255,255,255, 0.26)",
            ActionDisabledBackground = "rgba(255,255,255, 0.12)"
        }
    };

    MudTheme lightTheme = new MudTheme {
        Palette = new Palette() {
            Black = "#272c34"
        }
    };

    protected override async Task OnInitializedAsync() {
        i18n.InitLocalizedComponent(this);

        var theme = await localStorage.GetItemAsync<Theme>("theme");

        switch(theme) {
            case Theme.Dark:
                SetDarkTheme();
            break;
            case Theme.Light:
                SetLightTheme();
            break;
            default:
                SetDarkTheme();
            break;
        }
    }

    async Task ToggleTheme(bool _) {
        if(currentTheme == lightTheme) {
            SetDarkTheme();
            await localStorage.SetItemAsync<Theme>("theme", Theme.Dark);
        }
        else {
            SetLightTheme();
            await localStorage.SetItemAsync<Theme>("theme", Theme.Light);
        }
    }

    void SetLightTheme() {
        currentTheme = lightTheme;
        isLightTheme = true;
    }

    void SetDarkTheme() {
        currentTheme = darkTheme;
        isLightTheme = false;
    }

    void ToolsToggleOpen() {
        toolsOpen = !toolsOpen;
    }

    void FilesToggleOpen() {
        filesOpen = !filesOpen;
    }

    void OnLanguageClicked() => languageSelectVisible = true;

    void OnLanguageSelected(object sender, EventArgs e) {
        languageSelectVisible = false;

        StateHasChanged();
    }

    string GetVersion() {
        var first = changelogs.FirstOrDefault();

        if(first == null) {
            return "v0.0.0";
        }

        return first.TagName;
    }
}